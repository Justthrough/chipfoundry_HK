Microwatt + GPIO Controller

Hackathon Proposal â€“ Microwatt Momentum 2025

ðŸ“Œ Project Overview

This project extends the Microwatt open-source POWER CPU core with a memory-mapped General Purpose Input/Output (GPIO) controller. The goal is to demonstrate how Microwatt can be used as the central processor in an embedded system by connecting it to external inputs (switches, buttons, sensors) and outputs (LEDs, buzzers).

The project will showcase how Microwatt interacts with custom hardware peripherals, enabling users to build simple but practical systems with open-source CPU cores.

ðŸŽ¯ Objectives

Implement a GPIO peripheral for Microwatt with configurable input and output registers.

Enable Microwatt software programs to:

Read the state of input pins.

Write to output pins to control external devices.

Provide testbenches and simulation results to verify functionality.

Demonstrate the design in both simulation and optionally on FPGA hardware.

ðŸ›  Technical Approach
Hardware Design

GPIO Registers:

GPIO_IN â†’ Captures external input pins (read-only).

GPIO_OUT â†’ Controls output pins (read/write).

Integration: Connect GPIO peripheral to Microwattâ€™s memory-mapped bus.

RTL: Verilog/VHDL implementation with clean modular design.

Software Program (Demo)

A small program (in C using GCC for POWER) will:

Read the GPIO_IN register.

If input = 1, write 1 to GPIO_OUT â†’ LED turns ON.

Else, write 0 â†’ LED turns OFF.

Verification

Simulation (Verilator + GTKWave):

Testbench provides input stimulus (toggle switches).

Output register changes accordingly.

FPGA (Optional):

Map switches â†’ GPIO_IN and LEDs â†’ GPIO_OUT.

Pressing a switch toggles an LED, controlled by Microwatt.

ðŸ“‘ Deliverables

RTL source (Verilog/VHDL) for GPIO peripheral.

Integration files for Microwatt + GPIO.

Testbenches for functional verification.

Software demo program (C).

Documentation:

Block diagram

Explanation of registers

Simulation waveforms (screenshots)

Step-by-step usage guide

(Final Round) Video demo showing simulation/FPGA behavior.

âœ… Expected Outcomes

A working Microwatt + GPIO SoC design that can run software and control simple external devices.

Easy-to-reproduce open-source project for the community.

A foundation that can be extended with more complex peripherals (UART, timers, accelerators).

ðŸ“œ Open-Source License

This project will be released under the Apache 2.0 License.
